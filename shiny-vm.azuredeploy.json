{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualMachineName": {
      "type": "String",
      "defaultValue": "myVM",
      "minLength": 8,
      "maxLength": 15,
      "metadata": {
        "description": "The name of the VM"
      }
    },
    "virtualMachineSize": {
      "type": "String",
      "defaultValue": "Standard_D2s_v4",
      "metadata": {
        "description": "The virtual machine size."
      }
    },
    "existingVirtualNetworkName": {
      "type": "String",
      "metadata": {
        "description": "Specify the name of an existing VNet in the same resource group"
      }
    },
    "existingVnetResourceGroup": {
      "type": "String",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Specify the resource group of the existing VNet"
      }
    },
    "existingSubnetName": {
      "type": "String",
      "metadata": {
        "description": "Specify the name of the Subnet Name"
      }
    },
    "imageOffer": {
      "type": "String",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "Windows Offer"
      }
    },
    "imageSku": {
      "type": "String",
      "defaultValue": "2019-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Datacenter",
        "2019-Datacenter"
      ],
      "metadata": {
        "description": "Windows Server SKU"
      }
    },
    "adminUsername": {
      "type": "String",
      "defaultValue": "[concat(parameters('virtualMachineName'),'-admin')]",
      "minLength": 8,
      "maxLength": 20,
      "metadata": {
        "description": "The admin user name of the VM"
      }
    },
    "adminPassword": {
      "type": "SecureString",
      "minLength": 13,
      "metadata": {
        "description": "13 - 123 chars, including upper case, lower case, a number, a special character"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "enableAcceleratedNetworking": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Set true for VMs with 4 or more vCPUs, and exceptions like D2s_v4"
      }
    },
    "resourceTags": {
      "type": "object",
      "defaultValue": {
        "Environment": "DEV",
        "Service": "Infrastructure"
      }
    }
  },
  "variables": {
    "networkInterfaceName":"[concat('nic-vm-',parameters('virtualMachineName'),'-1' )]",
    "publicIpAddressName": "[concat('pip-vm-',parameters('virtualMachineName'),'-1' )]",
    "publicIpAddressType": "Dynamic",
    "publicIpAddressSku": "Basic",
    "subnetRef": "[resourceID(parameters('existingVNetResourceGroup'), 'Microsoft.Network/virtualNetWorks/subnets', parameters('existingVirtualNetworkName'), parameters('existingSubNetName'))]"
  },
  "resources": [
        {
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2020-06-01",
      "name": "[variables('publicIpAddressName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "sku": {
        "name": "[variables('publicIpAddressSku')]"
      },
      "properties": {
        "publicIpAllocationMethod": "[variables('publicIpAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[toLower(parameters('virtualMachineName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-06-01",
      "name": "[variables('networkInterfaceName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
              }
            }
          }
        ],
        "enableAcceleratedNetworking":"[parameters('enableAcceleratedNetworking')]" 
       }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-12-01",
      "name": "[parameters('virtualMachineName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "name": "[concat('dsk-vm-',parameters('virtualMachineName'),'-OS' )]",
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          },
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSku')]",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachineName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "timeZone": "Eastern Standard Time",
            "enableAutomaticUpdates": true,
            "provisionVmAgent": true
          }
        }
      }
    }
  ],
  "outputs": {
    "adminUsername": {
      "type": "String",
      "value": "[parameters('adminUsername')]"
    },
    "FQDN": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIpAddresses',variables('publicIpAddressName'))).dnsSettings.FQDN]"
    }
  }
}
